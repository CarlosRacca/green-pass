'use client'

import { createContext, useContext, useMemo, useState, ReactNode, useEffect } from 'react'

type Locale = 'es' | 'en'

type Dict = Record<string, string>

const DICTIONARIES: Record<Locale, Dict> = {
  es: {
    search_placeholder: 'Buscar usuarios, torneos, viajes...',
    notifications: 'Notificaciones',
    my_account: 'Mi Cuenta',
    profile: 'Perfil',
    settings: 'Configuración',
    logout: 'Cerrar Sesión',
    language: 'Idioma',
    dashboard: 'Dashboard',
    users: 'Usuarios',
    tournaments: 'Torneos',
    travels: 'Viajes',
    consultations: 'Consultas',
    analytics: 'Analíticas',
    calendar: 'Calendario',
    favorites: 'Favoritos',
    save: 'Guardar',
    cancel: 'Cancelar',
    edit: 'Editar',
    delete: 'Eliminar',
    create: 'Crear',
    search: 'Buscar',
    filter: 'Filtrar',
    role_admin: 'Administrador',
    role_client: 'Cliente',
    manage_users: 'Gestiona todos los usuarios registrados',
    active: 'Activo',
    inactive: 'Inactivo',
    registered: 'Registrado',
    tournaments_played: 'torneos participados',
    error_generic: 'Ocurrió un error',
    login: 'Iniciar Sesión',
    signing_in: 'Iniciando sesión...',
    email: 'Email',
    password: 'Contraseña',
    demo_accounts: 'Cuentas de demostración',
    administrator: 'Administrador',
    client_role: 'Cliente',
    view_details: 'Ver Detalles',
    export: 'Exportar',
    create_user: 'Crear Usuario',
    total_tournaments: 'Total Torneos',
    open_plural: 'Abiertos',
    participants: 'Participantes',
    revenue: 'Ingresos',
    state: 'Estado',
    all_statuses: 'Todos los estados',
    search_by_name_or_location: 'Buscar por nombre o ubicación...',
    open: 'Abierto',
    closed: 'Cerrado',
    completed: 'Completado',
    cancelled: 'Cancelado',
    draft: 'Borrador',
    in_progress: 'En curso',
    full: 'Lleno',
    no_tournaments: 'No hay torneos',
    no_tournaments_filters: 'No se encontraron torneos con los filtros aplicados.',
    no_tournaments_empty: 'Aún no hay torneos registrados.',
    sold_trips: 'Viajes Vendidos',
    manage_travels: 'Gestiona todos los paquetes de viaje de golf',
    export_report: 'Exportar Reporte',
    create_travel: 'Crear Nuevo Viaje',
    total_trips: 'Total Viajes',
    total_travelers: 'Total Viajeros',
    total_revenue: 'Ingresos Totales',
    commissions: 'Comisiones',
    includes: 'Incluye:',
    view_participants: 'Ver Participantes',
    queries: 'Consultas',
    manage_queries: 'Gestiona las consultas de los usuarios',
    new_female: 'Nuevas',
    total: 'Total',
    search_by_subject_or_user: 'Buscar por asunto o usuario...',
    priority: 'Prioridad',
    all_priorities: 'Todas las prioridades',
    high: 'Alta',
    medium: 'Media',
    low: 'Baja',
    urgent: 'Urgente',
    none: 'Ninguna',
    by_user: 'Por',
    no_queries: 'No hay consultas',
    no_queries_filters: 'No se encontraron consultas con los filtros aplicados.',
    no_queries_empty: 'Aún no hay consultas registradas.',
    back_home: 'Volver al inicio',
    // Travel detail keys
    'travel.highlights': 'Lo Más Destacado',
    'travel.golf_courses': 'Campos de Golf',
    'travel.itinerary': 'Itinerario',
    'travel.day': 'Día',
    'travel.includes': 'Incluye',
    'travel.excludes': 'No Incluye',
    'travel.book': 'Reservar Experiencia',
    'travel.per_person': 'por persona',
    'travel.dates': 'Fechas',
    'travel.duration': 'Duración',
    'travel.days': 'días',
    'travel.availability': 'Disponibilidad',
    'travel.spots': 'lugares',
    'travel.book_now': 'Reservar Ahora',
    'travel.booking_note': 'Reserva sin compromiso. Cancela hasta 48hs antes.',
    'travel.accommodation': 'Alojamiento',
    'travel.stars': 'estrellas',
    'travel.amenities': 'Servicios',
    'travel.participants': 'Participantes',
    'travel.spots_available': 'lugares disponibles',
  },
  en: {
    search_placeholder: 'Search users, tournaments, trips...',
    notifications: 'Notifications',
    my_account: 'My Account',
    profile: 'Profile',
    settings: 'Settings',
    logout: 'Log out',
    language: 'Language',
    dashboard: 'Dashboard',
    users: 'Users',
    tournaments: 'Tournaments',
    travels: 'Travels',
    consultations: 'Consultations',
    analytics: 'Analytics',
    calendar: 'Calendar',
    favorites: 'Favorites',
    save: 'Save',
    cancel: 'Cancel',
    edit: 'Edit',
    delete: 'Delete',
    create: 'Create',
    search: 'Search',
    filter: 'Filter',
    role_admin: 'Administrator',
    role_client: 'Client',
    manage_users: 'Manage all registered users',
    active: 'Active',
    inactive: 'Inactive',
    registered: 'Registered',
    tournaments_played: 'tournaments played',
    error_generic: 'An error occurred',
    login: 'Sign In',
    signing_in: 'Signing in...',
    email: 'Email',
    password: 'Password',
    demo_accounts: 'Demo Accounts',
    administrator: 'Administrator',
    client_role: 'Client',
    view_details: 'View Details',
    export: 'Export',
    create_user: 'Create User',
    total_tournaments: 'Total Tournaments',
    open_plural: 'Open',
    participants: 'Participants',
    revenue: 'Revenue',
    state: 'Status',
    all_statuses: 'All statuses',
    search_by_name_or_location: 'Search by name or location...',
    open: 'Open',
    closed: 'Closed',
    completed: 'Completed',
    cancelled: 'Cancelled',
    draft: 'Draft',
    in_progress: 'In progress',
    full: 'Full',
    no_tournaments: 'No tournaments',
    no_tournaments_filters: 'No tournaments match the current filters.',
    no_tournaments_empty: 'No tournaments yet.',
    sold_trips: 'Sold Trips',
    manage_travels: 'Manage all golf travel packages',
    export_report: 'Export Report',
    create_travel: 'Create New Trip',
    total_trips: 'Total Trips',
    total_travelers: 'Total Travelers',
    total_revenue: 'Total Revenue',
    commissions: 'Commissions',
    includes: 'Includes:',
    view_participants: 'View Participants',
    queries: 'Queries',
    manage_queries: 'Manage user queries',
    new_female: 'New',
    total: 'Total',
    search_by_subject_or_user: 'Search by subject or user...',
    priority: 'Priority',
    all_priorities: 'All priorities',
    high: 'High',
    medium: 'Medium',
    low: 'Low',
    urgent: 'Urgent',
    none: 'None',
    by_user: 'By',
    no_queries: 'No queries',
    no_queries_filters: 'No queries match the current filters.',
    no_queries_empty: 'No queries yet.',
    back_home: 'Back to home',
    // Travel detail keys
    'travel.highlights': 'Highlights',
    'travel.golf_courses': 'Golf courses',
    'travel.itinerary': 'Itinerary',
    'travel.day': 'Day',
    'travel.includes': 'Includes',
    'travel.excludes': 'Excludes',
    'travel.book': 'Book Experience',
    'travel.per_person': 'per person',
    'travel.dates': 'Dates',
    'travel.duration': 'Duration',
    'travel.days': 'days',
    'travel.availability': 'Availability',
    'travel.spots': 'spots',
    'travel.book_now': 'Book now',
    'travel.booking_note': 'No-commitment booking. Cancel up to 48h before.',
    'travel.accommodation': 'Accommodation',
    'travel.stars': 'stars',
    'travel.amenities': 'Amenities',
    'travel.participants': 'Participants',
    'travel.spots_available': 'spots available',
  },
}

interface I18nContextValue {
  locale: Locale
  setLocale: (l: Locale) => void
  t: (key: string) => string
}

const I18nContext = createContext<I18nContextValue | undefined>(undefined)

export function I18nProvider({ children }: { children: ReactNode }) {
  const [locale, setLocaleState] = useState<Locale>('es')

  useEffect(() => {
    if (typeof window === 'undefined') return
    const saved = window.localStorage.getItem('gp_locale') as Locale | null
    if (saved) setLocaleState(saved)
  }, [])

  const setLocale = (l: Locale) => {
    setLocaleState(l)
    try { if (typeof window !== 'undefined') window.localStorage.setItem('gp_locale', l) } catch {}
  }

  const t = (key: string) => DICTIONARIES[locale]?.[key] || key

  const value = useMemo(() => ({ locale, setLocale, t }), [locale])
  return <I18nContext.Provider value={value}>{children}</I18nContext.Provider>
}

export function useI18n() {
  const ctx = useContext(I18nContext)
  if (!ctx) throw new Error('useI18n must be used within I18nProvider')
  return ctx
}


